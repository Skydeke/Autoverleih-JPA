drop table Reservierung;
drop table Rechnung;
drop table Ausleihvorgang;
drop table besitzt;
drop table Kunde;
drop table ist_nachgeruestet_bei;
drop table ist_grundausstattung_bei;
drop table Autoexemplar;
drop table Ausstattung;
drop table Automodell;
drop table Fuehrerscheinklassen;
drop sequence SEQ_RECH_IDENTITY;

/*
Ich habe mich entschieden meine Vererbung durch das 'zusammennehmen' aller Attribute aus Unter- und Oberklasse aufzuloesen 
da die Alternativen schlechter sind. Desweiteren hat eine der Unterklassen keine eigenen Attribute wodurch der Nachteil viele NULL-Werte zu haben abgeschwaecht wird. 
 - Ich es nicht ueber eine Relation 'vererbt' von Oberklassentabelle zu Unterklassentabelle loesen da dies Imperformant ist und einen Join beim Abfragen benoetigt;
 - Ich will nicht 2 Tabellen fuer die Unterklassen in die die Attribute geschrieben werden da die Oberklasse an Relationen teilnimmt.
*/

/*
 * Sequence to generate unique Primary Keys, Name is speciefied by JPA
 */
CREATE SEQUENCE SEQ_RECH_IDENTITY START WITH 0 INCREMENT BY 1 NOCACHE NOCYCLE MINVALUE 0;

/* -------- Tabellen und Primaerschluessel -------- */
create table Automodell(
 Hersteller varchar(100) not null,
 
 Sitzplaetze number(2, 0) not null,
 PreisProTag number(5, 2) not null,
 Typ varchar(100) not null,
 PreisProKm number(5, 2) not null,
 Art varchar(1), -- L for LKW, P for PKW
 LadevolumenKubikMeter number(6, 0), -- L
 Achsenzahl number(2, 0), -- L
 LadegewichtKg number(6, 0) -- L
);
alter table Automodell add AutomodellNr integer GENERATED BY DEFAULT ON NULL AS IDENTITY;
alter table Automodell add constraint pk_Automodell primary key (AutomodellNr);

create table Fuehrerscheinklassen(
 Klassenbezeichnung varchar(3) not null);
alter table Fuehrerscheinklassen add constraint pk_Fuehrerscheinklassen primary key (Klassenbezeichnung);

create table besitzt( -- Loest N:M Relation zwischen Kunde und Fueherscheinklasse auf
 KundenNr integer,--Fremdschluessel, kann aber nicht im FS-Abschnitt deklariert weden da ansonsten tabelle ohne Attribute
 Klassenbezeichnung varchar(3));--Fremdschluessel, kann aber nicht im FS-Abschnitt deklariert weden da ansonsten tabelle ohne Attribute

create table Kunde(
 EMail varchar(100),
 
 Nachname varchar(100) not null,
 Vorname varchar(100) not null,
 ZweiterVorname varchar(100),
 
 Ort varchar(100) not null,
 PLZ varchar(5) not null,
 Land varchar(100),
 Strasse varchar(100) not null,
 HausNr number(4, 0) not null);
alter table Kunde add KundenNr integer GENERATED BY DEFAULT ON NULL AS IDENTITY;
alter table Kunde add constraint pk_Kunde primary key (KundenNr);
 
create table Reservierung(
 geplanterStart timestamp not null,
 geplantesEnde timestamp not null);
-- Man koennte die Start- und End- Zeit sowie die teilnehmende AutomodellNr zusammen als Primareschluessel sehen,
-- aber das macht Referenzen auf Reservierung unnoetig kompliziert.
alter table Reservierung add ResNr integer GENERATED BY DEFAULT ON NULL AS IDENTITY;
alter table Reservierung add constraint pk_Reservierung primary key (ResNr);
 
create table Ausstattung(
 Bezeichnung varchar(150) not null);
-- Man koennte diskutieren ob die Bezeichnung allein Schon die Austattung eindeutig identifiziert.
alter table Ausstattung add AusstattungNr integer GENERATED BY DEFAULT ON NULL AS IDENTITY;
alter table Ausstattung add constraint pk_Ausstattung primary key (AusstattungNr);
 
create table Autoexemplar(
 Kennzeichen varchar(15) not null,
 Kilometerstand number not null,
 letzterTUEV date not null,
 Kaufdatum date not null);
-- das kennzeichen ist eindeutig fï¿½r ein autoexemplar -> Primaerschluessel
alter table Autoexemplar add constraint pk_Autoexemplar primary key (Kennzeichen);

create table Ausleihvorgang(
 beginnZeit timestamp not null,
 endeZeit timestamp,
 beginnKm number not null,
 endeKm number);
alter table Ausleihvorgang add AusleihvorgangNr integer GENERATED BY DEFAULT ON NULL AS IDENTITY;
alter table Ausleihvorgang add constraint pk_Ausleihvorgang primary key (AusleihvorgangNr);


create table Rechnung(
 Summe number not null,
 Beglichen char not null); -- Es gibt keinen boolean in sql? deshalb Werte: t/f
alter table Rechnung add RechNr integer DEFAULT SEQ_RECH_IDENTITY.nextval;
alter table Rechnung add constraint pk_Rechnung primary key (RechNr);
alter table Rechnung add constraint regex_Beglichen check (regexp_like(Beglichen, 't|f'));

create table ist_nachgeruestet_bei( -- Loest N:M Relation zwischen Austattung und Autoexemplar auf
 Kennzeichen varchar(15),--Fremdschluessel, kann aber nicht im FS-Abschnitt deklariert weden da ansonsten tabelle ohne Attribute
 AusstattungNr integer);--Fremdschluessel, kann aber nicht im FS-Abschnitt deklariert weden da ansonsten tabelle ohne Attribute
 
create table ist_grundausstattung_bei( -- Loest N:M Relation zwischen Austattung und Automodell auf
 AutomodellNr integer,--Fremdschluessel, kann aber nicht im FS-Abschnitt deklariert weden da ansonsten tabelle ohne Attribute
 AusstattungNr integer);--Fremdschluessel, kann aber nicht im FS-Abschnitt deklariert weden da ansonsten tabelle ohne Attribute
 
 
 
/* -------- Fremdschluessel -------- */
--Autoexemplar
alter table Automodell add Klassenbezeichnung varchar(3);
alter table Automodell add constraint fk_Automo_Fuehrers foreign key (Klassenbezeichnung) references Fuehrerscheinklassen (Klassenbezeichnung) ON DELETE SET NULL;

--Autoexemplar
alter table Autoexemplar add AutomodellNr integer;
alter table Autoexemplar add constraint fk_Autoex_Automo foreign key (AutomodellNr) references Automodell (AutomodellNr) ON DELETE SET NULL;

--besitzt
alter table besitzt add constraint fk_besitzt_Kunde foreign key (KundenNr) references Kunde (KundenNr) ON DELETE SET NULL;
alter table besitzt add constraint fk_besitzt_Fuehrers foreign key (Klassenbezeichnung) references Fuehrerscheinklassen (Klassenbezeichnung) ON DELETE SET NULL;

--ist_nachgeruestet_bei
alter table ist_nachgeruestet_bei add constraint fk_ist_nachgeruestet_bei_Autoexemplar foreign key (Kennzeichen) references Autoexemplar (Kennzeichen) ON DELETE SET NULL;
alter table ist_nachgeruestet_bei add constraint fk_ist_nachgeruestet_bei_Ausstattung foreign key (AusstattungNr) references Ausstattung (AusstattungNr) ON DELETE SET NULL;

--ist_grundausstattung_bei
alter table ist_grundausstattung_bei add constraint fk_ist_grundausstattung_bei_Automodell foreign key (AutomodellNr) references Automodell (AutomodellNr) ON DELETE SET NULL;
alter table ist_grundausstattung_bei add constraint fk_ist_grundausstattung_bei_Ausstattung foreign key (AusstattungNr) references Ausstattung (AusstattungNr) ON DELETE SET NULL;

--Reservierung
alter table Reservierung add AutomodellNr integer;
alter table Reservierung add constraint fk_Reserv_Automo foreign key (AutomodellNr) references Automodell (AutomodellNr) ON DELETE SET NULL;
alter table Reservierung add KundenNr integer;
alter table Reservierung add constraint fk_Reserv_Kunde foreign key (KundenNr) references Kunde (KundenNr) ON DELETE SET NULL;
alter table Reservierung add AusleihvorgangNr integer;
alter table Reservierung add constraint fk_Reserv_Ausl foreign key (AusleihvorgangNr) references Ausleihvorgang (AusleihvorgangNr) ON DELETE SET NULL;

--Ausleihvorgang
alter table Ausleihvorgang add Kennzeichen varchar(10);
alter table Ausleihvorgang add constraint fk_Ausl_Autoex foreign key (Kennzeichen) references Autoexemplar (Kennzeichen) ON DELETE SET NULL;

--Rechnung
-- Ich habe mich dafuer entschieden den Fremdschluessel bei Rechnung hinzuzufuegen astelle des Ausleihvorgangs, 
-- da bei erstellen eines Datensatzes in Ausleihvorgang nicht schon klar ist wie teuer es den wird.
alter table Rechnung add AusleihvorgangNr integer;
alter table Rechnung add constraint fk_Rechn_Ausl foreign key (AusleihvorgangNr) references Ausleihvorgang (AusleihvorgangNr) ON DELETE SET NULL;

 
/* -------- Datensaetze -------- */

--Fuehrerscheinklassen
insert into Fuehrerscheinklassen (Klassenbezeichnung) values ('B');
insert into Fuehrerscheinklassen (Klassenbezeichnung) values ('C');
insert into Fuehrerscheinklassen (Klassenbezeichnung) values ('A');
insert into Fuehrerscheinklassen (Klassenbezeichnung) values ('D');
insert into Fuehrerscheinklassen (Klassenbezeichnung) values ('L');
insert into Fuehrerscheinklassen (Klassenbezeichnung) values ('AM');
commit;

--Ausstattung
insert into Ausstattung (AusstattungNr, Bezeichnung) values (0, 'Ledersitze');
insert into Ausstattung (AusstattungNr, Bezeichnung) values (1, 'Fellsitze');
insert into Ausstattung (AusstattungNr, Bezeichnung) values (2, 'UKW-Radio');
insert into Ausstattung (AusstattungNr, Bezeichnung) values (3, 'Klimaanlage');
commit;

--Automodell
insert into Automodell (AutomodellNr, Klassenbezeichnung, Hersteller, Sitzplaetze, PreisProTag, Typ, PreisProKm, Art, LadevolumenkubikMeter, Achsenzahl, LadegewichtKg) values (0, 'B', 'Audi', 5, 150, 'Cabrio', 0.4, 'P', null, null, null);
insert into Automodell (AutomodellNr, Klassenbezeichnung, Hersteller, Sitzplaetze, PreisProTag, Typ, PreisProKm, Art, LadevolumenkubikMeter, Achsenzahl, LadegewichtKg) values (1, 'B', 'Mercedes', 5, 120, 'SUV', 0.6, 'P', null, null, null);
insert into Automodell (AutomodellNr, Klassenbezeichnung, Hersteller, Sitzplaetze, PreisProTag, Typ, PreisProKm, Art, LadevolumenkubikMeter, Achsenzahl, LadegewichtKg) values (2, 'B', 'VW', 5, 150, 'Cabrio', 0.4, 'P', null, null, null);

insert into Automodell (AutomodellNr, Klassenbezeichnung, Hersteller, Sitzplaetze, PreisProTag, Typ, PreisProKm, Art, LadevolumenkubikMeter, Achsenzahl, LadegewichtKg) values (3, 'C', 'MAN', 3, 350, 'Muldenkipper', 0.2, 'L', 24, 3, 15000);
insert into Automodell (AutomodellNr, Klassenbezeichnung, Hersteller, Sitzplaetze, PreisProTag, Typ, PreisProKm, Art, LadevolumenkubikMeter, Achsenzahl, LadegewichtKg) values (4, 'D', 'MAN', 3, 250, 'BUS', 0.3, 'L', 24, 3, 15000);
insert into Automodell (AutomodellNr, Klassenbezeichnung, Hersteller, Sitzplaetze, PreisProTag, Typ, PreisProKm, Art, LadevolumenkubikMeter, Achsenzahl, LadegewichtKg) values (5, 'C', 'MAN', 3, 550, 'Schwanenhals', 0.2, 'L', 98, 3, 24000);
commit;

--ist_nachgeruestet_bei
insert into ist_grundausstattung_bei (AutomodellNr, AusstattungNr) values (0, 0);
insert into ist_grundausstattung_bei (AutomodellNr, AusstattungNr) values (0, 2);
insert into ist_grundausstattung_bei (AutomodellNr, AusstattungNr) values (0, 3);

insert into ist_grundausstattung_bei (AutomodellNr, AusstattungNr) values (1, 2);
insert into ist_grundausstattung_bei (AutomodellNr, AusstattungNr) values (1, 3);

insert into ist_grundausstattung_bei (AutomodellNr, AusstattungNr) values (2, 2);
insert into ist_grundausstattung_bei (AutomodellNr, AusstattungNr) values (2, 3);

insert into ist_grundausstattung_bei (AutomodellNr, AusstattungNr) values (3, 2);
insert into ist_grundausstattung_bei (AutomodellNr, AusstattungNr) values (3, 3);

insert into ist_grundausstattung_bei (AutomodellNr, AusstattungNr) values (4, 2);
insert into ist_grundausstattung_bei (AutomodellNr, AusstattungNr) values (4, 3);

insert into ist_grundausstattung_bei (AutomodellNr, AusstattungNr) values (5, 2);
insert into ist_grundausstattung_bei (AutomodellNr, AusstattungNr) values (5, 3);
commit;

--Autoexemplar
insert into Autoexemplar (Kennzeichen, Kilometerstand, LetzterTUEV, Kaufdatum, AutomodellNr) values ('RV-KA-789', 80342, to_date('2022-06-19', 'yyyy.mm.dd'), to_date('2018-12-15', 'yyyy.mm.dd'), 0);
insert into Autoexemplar (Kennzeichen, Kilometerstand, LetzterTUEV, Kaufdatum, AutomodellNr) values ('RW-PA-2893', 160342, to_date('2022-06-17', 'yyyy.mm.dd'), to_date('2017-04-15', 'yyyy.mm.dd'), 1);
insert into Autoexemplar (Kennzeichen, Kilometerstand, LetzterTUEV, Kaufdatum, AutomodellNr) values ('RV-JW-729', 68393, to_date('2022-06-14','yyyy.mm.dd'), to_date('2019-04-15', 'yyyy.mm.dd'), 2);
insert into Autoexemplar (Kennzeichen, Kilometerstand, LetzterTUEV, Kaufdatum, AutomodellNr) values ('RV-FS-1234', 4232, to_date('2022-06-15','yyyy.mm.dd'), to_date('2022-04-04', 'yyyy.mm.dd'), 3);
insert into Autoexemplar (Kennzeichen, Kilometerstand, LetzterTUEV, Kaufdatum, AutomodellNr) values ('RV-SW-7223', 168393, to_date('2022-06-14','yyyy.mm.dd'), to_date('2016-03-15', 'yyyy.mm.dd'), 4);
insert into Autoexemplar (Kennzeichen, Kilometerstand, LetzterTUEV, Kaufdatum, AutomodellNr) values ('RV-FS-1225', 42328, to_date('2022-06-15','yyyy.mm.dd'), to_date('2021-02-04', 'yyyy.mm.dd'), 5);
commit;

--ist_nachgeruestet_bei
insert into ist_nachgeruestet_bei (Kennzeichen, AusstattungNr) values ('RV-FS-1225', 1);
commit;

--Kunde
insert into Kunde (Vorname, Nachname, ZweiterVorname, Ort, PLZ, Land, Strasse, HausNr, EMail, KundenNr) values ('Niklas', 'Kleiser', 'Elias', 'Dortmund', 44339, 'Deutschland', 'Kappenberger StraÃe', 12, 'kleiser@rwu.de', 0);
insert into Kunde (Vorname, Nachname, ZweiterVorname, Ort, PLZ, Land, Strasse, HausNr, EMail, KundenNr) values ('Jonathan', 'Wekesser', null, 'Dortmund', 44339, 'Deutschland', 'Lothringer StraÃe', 4, 'j.wekesser@rwu.de', 1);
insert into Kunde (Vorname, Nachname, ZweiterVorname, Ort, PLZ, Land, Strasse, HausNr, EMail, KundenNr) values ('Anakin', 'Skywalker', 'Vader', 'Vaders castle', 35152, 'Deutschland', 'Mustafar StraÃe', 1, 'vader@imperium.org', 2);
commit;

--besitzt
insert into besitzt (KundenNr, Klassenbezeichnung) values (0, 'D');
insert into besitzt (KundenNr, Klassenbezeichnung) values (2, 'B');
insert into besitzt (KundenNr, Klassenbezeichnung) values (2, 'C');
insert into besitzt (KundenNr, Klassenbezeichnung) values (1, 'B');
commit;

--Ausleihvorgang
insert into Ausleihvorgang(beginnZeit, endeZeit, beginnKm, endeKm, AusleihvorgangNr, Kennzeichen) values (to_date('2022-10-12 12:00:30','yyyy.mm.dd HH24:MI:SS'), to_date('2022-10-19 11:50:00','yyyy.mm.dd HH24:MI:SS'), 168393, 168792, 0, 'RV-SW-7223');
insert into Ausleihvorgang(beginnZeit, endeZeit, beginnKm, endeKm, AusleihvorgangNr, Kennzeichen) values (to_date('2022-09-26 09:01:00','yyyy.mm.dd HH24:MI:SS'), to_date('2022-09-26 10:03:00','yyyy.mm.dd HH24:MI:SS'), 160342, 160382, 1, 'RW-PA-2893');
insert into Ausleihvorgang(beginnZeit, endeZeit, beginnKm, endeKm, AusleihvorgangNr, Kennzeichen) values (to_date('2022-08-15 12:07:13','yyyy.mm.dd HH24:MI:SS'), to_date('2022-08-15 18:05:43','yyyy.mm.dd HH24:MI:SS'), 80342, 80412, 2, 'RV-KA-789');
insert into Ausleihvorgang(beginnZeit, endeZeit, beginnKm, endeKm, AusleihvorgangNr, Kennzeichen) values (to_date('2022-10-12 15:13:20','yyyy.mm.dd HH24:MI:SS'), to_date('2022-10-19 15:11:23','yyyy.mm.dd HH24:MI:SS'), 4232, 5121, 3, 'RV-FS-1234'); 
commit;

--Rechnung
insert into Rechnung (Summe, Beglichen, AusleihvorgangNr) values (1849.7 , 't', 0);
insert into Rechnung (Summe, Beglichen, AusleihvorgangNr) values (144 , 'f', 1);
insert into Rechnung (Summe, Beglichen, AusleihvorgangNr) values (178 , 't', 2);
insert into Rechnung (Summe, Beglichen, AusleihvorgangNr) values (2627.8 , 't', 3);
commit;

--Reservierung
insert into Reservierung(geplanterStart, geplantesEnde, KundenNr, AutomodellNr, AusleihvorgangNr, ResNr) values (to_date('2022-10-12 12:00:00','yyyy.mm.dd HH24:MI:SS'), to_date('2022-10-19 12:00:00','yyyy.mm.dd HH24:MI:SS'), 0, 4, 0, 0);
insert into Reservierung(geplanterStart, geplantesEnde, KundenNr, AutomodellNr, AusleihvorgangNr, ResNr) values (to_date('2022-09-26 09:00:00','yyyy.mm.dd HH24:MI:SS'), to_date('2022-09-26 10:00:00','yyyy.mm.dd HH24:MI:SS'), 2, 1, 1, 1);
insert into Reservierung(geplanterStart, geplantesEnde, KundenNr, AutomodellNr, AusleihvorgangNr, ResNr) values (to_date('2022-08-15 12:10:00','yyyy.mm.dd HH24:MI:SS'), to_date('2022-08-15 18:10:00','yyyy.mm.dd HH24:MI:SS'), 1, 0, 2, 2);
insert into Reservierung(geplanterStart, geplantesEnde, KundenNr, AutomodellNr, AusleihvorgangNr, ResNr) values (to_date('2022-10-12 15:10:00','yyyy.mm.dd HH24:MI:SS'), to_date('2022-10-19 15:10:00','yyyy.mm.dd HH24:MI:SS'), 2, 3, 3, 3);
commit;
